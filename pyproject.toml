[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "amt"
version = "0.1.0"
description = "Automated Music Transcription with Transformer models"
readme = "README.md"
authors = [
    {name = "AMT Team"}
]
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=1.20.0",
    "torch>=1.10.0",
    "pretty_midi>=0.2.9",
    "mido>=1.2.10",
    "tqdm>=4.62.0",
    "tensorboard>=2.8.0",
    "click>=8.1.0",
    "pydantic>=1.9.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.3.0",
    "isort>=5.12.0",
    "ruff>=0.0.262",
    "mypy>=1.3.0",
    "pre-commit>=3.3.1",
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
]

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | models/checkpoints
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip_glob = ["models/checkpoints/*"]

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "W", "N", "UP", "B", "C4", "PT"]
ignore = ["E203", "E501"]
exclude = [
    ".git",
    ".mypy_cache",
    ".venv",
    "models/checkpoints",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "pretty_midi.*",
    "mido.*",
    "tqdm.*",
    "tensorboard.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=amt --cov-report=term-missing" 

[project.scripts]
amt = "amt.cli:cli"
amt-simple = "amt.cli_simple:cli"